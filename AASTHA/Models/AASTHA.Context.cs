//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AASTHA.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class AASTHAEntities : DbContext
    {
        public AASTHAEntities()
            : base("name=AASTHAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tbl_appointment> tbl_appointment { get; set; }
        public DbSet<tbl_shift> tbl_shift { get; set; }
        public DbSet<delivery_master> delivery_master { get; set; }
        public DbSet<diagnosis_master> diagnosis_master { get; set; }
        public DbSet<general_diagnosis> general_diagnosis { get; set; }
        public DbSet<IPD_Charge_Details> IPD_Charge_Details { get; set; }
        public DbSet<IPD_Charges_Master> IPD_Charges_Master { get; set; }
        public DbSet<medicine_master> medicine_master { get; set; }
        public DbSet<operation_master> operation_master { get; set; }
        public DbSet<tbl_delivery> tbl_delivery { get; set; }
        public DbSet<tbl_general> tbl_general { get; set; }
        public DbSet<tbl_Ipd> tbl_Ipd { get; set; }
        public DbSet<tbl_medicine_type> tbl_medicine_type { get; set; }
        public DbSet<tbl_opd> tbl_opd { get; set; }
        public DbSet<tbl_operation> tbl_operation { get; set; }
        public DbSet<tbl_patient> tbl_patient { get; set; }
        public DbSet<tbl_user> tbl_user { get; set; }
        public DbSet<Tran_MachineRawPunch> Tran_MachineRawPunch { get; set; }
        public DbSet<tbl_advice> tbl_advice { get; set; }
    
        public virtual int Add_Appointment(Nullable<int> patient_id, string date, string type)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Appointment", patient_idParameter, dateParameter, typeParameter);
        }
    
        public virtual int Add_Shift(Nullable<int> user_Id, Nullable<System.DateTime> date, string shift)
        {
            var user_IdParameter = user_Id.HasValue ?
                new ObjectParameter("User_Id", user_Id) :
                new ObjectParameter("User_Id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var shiftParameter = shift != null ?
                new ObjectParameter("Shift", shift) :
                new ObjectParameter("Shift", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Shift", user_IdParameter, dateParameter, shiftParameter);
        }
    
        public virtual ObjectResult<Biometric_Report_Result> Biometric_Report(string report_type, string reportdate)
        {
            var report_typeParameter = report_type != null ?
                new ObjectParameter("report_type", report_type) :
                new ObjectParameter("report_type", typeof(string));
    
            var reportdateParameter = reportdate != null ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Biometric_Report_Result>("Biometric_Report", report_typeParameter, reportdateParameter);
        }
    
        public virtual int Dynamic_Pivot()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dynamic_Pivot");
        }
    
        public virtual ObjectResult<Get_IPD_Monthwise_Collection_Result> Get_IPD_Monthwise_Collection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_IPD_Monthwise_Collection_Result>("Get_IPD_Monthwise_Collection");
        }
    
        public virtual ObjectResult<Get_Monthwise_Collection_Result> Get_Monthwise_Collection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_Monthwise_Collection_Result>("Get_Monthwise_Collection");
        }
    
        public virtual ObjectResult<Get_OPD_Monthwise_Collection_Result> Get_OPD_Monthwise_Collection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_OPD_Monthwise_Collection_Result>("Get_OPD_Monthwise_Collection");
        }
    
        public virtual ObjectResult<GetAllMedicineWithType_Result> GetAllMedicineWithType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMedicineWithType_Result>("GetAllMedicineWithType");
        }
    
        public virtual ObjectResult<Nullable<int>> GetDashBoardCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetDashBoardCount");
        }
    
        public virtual ObjectResult<GetYearTab_Result> GetYearTab()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetYearTab_Result>("GetYearTab");
        }
    
        public virtual ObjectResult<GetYearTabs_Result> GetYearTabs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetYearTabs_Result>("GetYearTabs");
        }
    
        public virtual ObjectResult<IsAppointed_Result> IsAppointed(Nullable<int> patient_id, string date)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IsAppointed_Result>("IsAppointed", patient_idParameter, dateParameter);
        }
    
        public virtual ObjectResult<Monthly_AttendanceReport_Result> Monthly_AttendanceReport(string reportdate)
        {
            var reportdateParameter = reportdate != null ?
                new ObjectParameter("reportdate", reportdate) :
                new ObjectParameter("reportdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Monthly_AttendanceReport_Result>("Monthly_AttendanceReport", reportdateParameter);
        }
    
        public virtual ObjectResult<OPDReport_Result> OPDReport(string type, Nullable<System.DateTime> date, Nullable<System.DateTime> start, Nullable<System.DateTime> end)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var startParameter = start.HasValue ?
                new ObjectParameter("start", start) :
                new ObjectParameter("start", typeof(System.DateTime));
    
            var endParameter = end.HasValue ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OPDReport_Result>("OPDReport", typeParameter, dateParameter, startParameter, endParameter);
        }
    
        public virtual int Add_OPD_Entry(Nullable<int> patient_id, string opd_date, string case_type, Nullable<int> consult_charege, Nullable<int> usg_charge, Nullable<int> upt_charge, Nullable<int> inj_charge, Nullable<int> dress_charge)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(int));
    
            var opd_dateParameter = opd_date != null ?
                new ObjectParameter("opd_date", opd_date) :
                new ObjectParameter("opd_date", typeof(string));
    
            var case_typeParameter = case_type != null ?
                new ObjectParameter("case_type", case_type) :
                new ObjectParameter("case_type", typeof(string));
    
            var consult_charegeParameter = consult_charege.HasValue ?
                new ObjectParameter("consult_charege", consult_charege) :
                new ObjectParameter("consult_charege", typeof(int));
    
            var usg_chargeParameter = usg_charge.HasValue ?
                new ObjectParameter("usg_charge", usg_charge) :
                new ObjectParameter("usg_charge", typeof(int));
    
            var upt_chargeParameter = upt_charge.HasValue ?
                new ObjectParameter("upt_charge", upt_charge) :
                new ObjectParameter("upt_charge", typeof(int));
    
            var inj_chargeParameter = inj_charge.HasValue ?
                new ObjectParameter("inj_charge", inj_charge) :
                new ObjectParameter("inj_charge", typeof(int));
    
            var dress_chargeParameter = dress_charge.HasValue ?
                new ObjectParameter("dress_charge", dress_charge) :
                new ObjectParameter("dress_charge", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_OPD_Entry", patient_idParameter, opd_dateParameter, case_typeParameter, consult_charegeParameter, usg_chargeParameter, upt_chargeParameter, inj_chargeParameter, dress_chargeParameter);
        }
    
        public virtual int Add_OPD_Record(Nullable<int> patient_id, string opd_date, string case_type, Nullable<int> consult_charege, Nullable<int> usg_charge, Nullable<int> upt_charge, Nullable<int> inj_charge, Nullable<int> dress_charge)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(int));
    
            var opd_dateParameter = opd_date != null ?
                new ObjectParameter("opd_date", opd_date) :
                new ObjectParameter("opd_date", typeof(string));
    
            var case_typeParameter = case_type != null ?
                new ObjectParameter("case_type", case_type) :
                new ObjectParameter("case_type", typeof(string));
    
            var consult_charegeParameter = consult_charege.HasValue ?
                new ObjectParameter("consult_charege", consult_charege) :
                new ObjectParameter("consult_charege", typeof(int));
    
            var usg_chargeParameter = usg_charge.HasValue ?
                new ObjectParameter("usg_charge", usg_charge) :
                new ObjectParameter("usg_charge", typeof(int));
    
            var upt_chargeParameter = upt_charge.HasValue ?
                new ObjectParameter("upt_charge", upt_charge) :
                new ObjectParameter("upt_charge", typeof(int));
    
            var inj_chargeParameter = inj_charge.HasValue ?
                new ObjectParameter("inj_charge", inj_charge) :
                new ObjectParameter("inj_charge", typeof(int));
    
            var dress_chargeParameter = dress_charge.HasValue ?
                new ObjectParameter("dress_charge", dress_charge) :
                new ObjectParameter("dress_charge", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_OPD_Record", patient_idParameter, opd_dateParameter, case_typeParameter, consult_charegeParameter, usg_chargeParameter, upt_chargeParameter, inj_chargeParameter, dress_chargeParameter);
        }
    
        public virtual int admin_panel(string type, string gen_dia, string del_dia, string del_type, string op_type, Nullable<int> med_type, string med_name)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var gen_diaParameter = gen_dia != null ?
                new ObjectParameter("gen_dia", gen_dia) :
                new ObjectParameter("gen_dia", typeof(string));
    
            var del_diaParameter = del_dia != null ?
                new ObjectParameter("del_dia", del_dia) :
                new ObjectParameter("del_dia", typeof(string));
    
            var del_typeParameter = del_type != null ?
                new ObjectParameter("del_type", del_type) :
                new ObjectParameter("del_type", typeof(string));
    
            var op_typeParameter = op_type != null ?
                new ObjectParameter("op_type", op_type) :
                new ObjectParameter("op_type", typeof(string));
    
            var med_typeParameter = med_type.HasValue ?
                new ObjectParameter("med_type", med_type) :
                new ObjectParameter("med_type", typeof(int));
    
            var med_nameParameter = med_name != null ?
                new ObjectParameter("med_name", med_name) :
                new ObjectParameter("med_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("admin_panel", typeParameter, gen_diaParameter, del_diaParameter, del_typeParameter, op_typeParameter, med_typeParameter, med_nameParameter);
        }
    
        public virtual int Delete_Ipd_Charge(Nullable<int> ipd_id)
        {
            var ipd_idParameter = ipd_id.HasValue ?
                new ObjectParameter("ipd_id", ipd_id) :
                new ObjectParameter("ipd_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Ipd_Charge", ipd_idParameter);
        }
    
        public virtual int delete_ipd_entry(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_ipd_entry", idParameter);
        }
    
        public virtual int delete_opd_entry(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_opd_entry", idParameter);
        }
    
        public virtual int delete_patient_entry(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delete_patient_entry", idParameter);
        }
    
        public virtual int edit_delivery_entry(Nullable<int> id, string room_type, string add_date, string del_date, string del_time, string del_dia, string del_type, string dis_date, string baby_gender, Nullable<decimal> baby_weight, Nullable<int> bill, Nullable<int> conssesion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var room_typeParameter = room_type != null ?
                new ObjectParameter("room_type", room_type) :
                new ObjectParameter("room_type", typeof(string));
    
            var add_dateParameter = add_date != null ?
                new ObjectParameter("add_date", add_date) :
                new ObjectParameter("add_date", typeof(string));
    
            var del_dateParameter = del_date != null ?
                new ObjectParameter("del_date", del_date) :
                new ObjectParameter("del_date", typeof(string));
    
            var del_timeParameter = del_time != null ?
                new ObjectParameter("del_time", del_time) :
                new ObjectParameter("del_time", typeof(string));
    
            var del_diaParameter = del_dia != null ?
                new ObjectParameter("del_dia", del_dia) :
                new ObjectParameter("del_dia", typeof(string));
    
            var del_typeParameter = del_type != null ?
                new ObjectParameter("del_type", del_type) :
                new ObjectParameter("del_type", typeof(string));
    
            var dis_dateParameter = dis_date != null ?
                new ObjectParameter("dis_date", dis_date) :
                new ObjectParameter("dis_date", typeof(string));
    
            var baby_genderParameter = baby_gender != null ?
                new ObjectParameter("baby_gender", baby_gender) :
                new ObjectParameter("baby_gender", typeof(string));
    
            var baby_weightParameter = baby_weight.HasValue ?
                new ObjectParameter("baby_weight", baby_weight) :
                new ObjectParameter("baby_weight", typeof(decimal));
    
            var billParameter = bill.HasValue ?
                new ObjectParameter("bill", bill) :
                new ObjectParameter("bill", typeof(int));
    
            var conssesionParameter = conssesion.HasValue ?
                new ObjectParameter("conssesion", conssesion) :
                new ObjectParameter("conssesion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_delivery_entry", idParameter, room_typeParameter, add_dateParameter, del_dateParameter, del_timeParameter, del_diaParameter, del_typeParameter, dis_dateParameter, baby_genderParameter, baby_weightParameter, billParameter, conssesionParameter);
        }
    
        public virtual int edit_general_entry(Nullable<int> id, string room_type, string add_date, string gen_dia, string dis_date, Nullable<int> bill, Nullable<int> conssesion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var room_typeParameter = room_type != null ?
                new ObjectParameter("room_type", room_type) :
                new ObjectParameter("room_type", typeof(string));
    
            var add_dateParameter = add_date != null ?
                new ObjectParameter("add_date", add_date) :
                new ObjectParameter("add_date", typeof(string));
    
            var gen_diaParameter = gen_dia != null ?
                new ObjectParameter("gen_dia", gen_dia) :
                new ObjectParameter("gen_dia", typeof(string));
    
            var dis_dateParameter = dis_date != null ?
                new ObjectParameter("dis_date", dis_date) :
                new ObjectParameter("dis_date", typeof(string));
    
            var billParameter = bill.HasValue ?
                new ObjectParameter("bill", bill) :
                new ObjectParameter("bill", typeof(int));
    
            var conssesionParameter = conssesion.HasValue ?
                new ObjectParameter("conssesion", conssesion) :
                new ObjectParameter("conssesion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_general_entry", idParameter, room_typeParameter, add_dateParameter, gen_diaParameter, dis_dateParameter, billParameter, conssesionParameter);
        }
    
        public virtual int Edit_IPD_Charge_Table(Nullable<int> ipd_id, Nullable<int> charge_id, Nullable<double> day, Nullable<int> rate, Nullable<int> amt)
        {
            var ipd_idParameter = ipd_id.HasValue ?
                new ObjectParameter("ipd_id", ipd_id) :
                new ObjectParameter("ipd_id", typeof(int));
    
            var charge_idParameter = charge_id.HasValue ?
                new ObjectParameter("charge_id", charge_id) :
                new ObjectParameter("charge_id", typeof(int));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(double));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_IPD_Charge_Table", ipd_idParameter, charge_idParameter, dayParameter, rateParameter, amtParameter);
        }
    
        public virtual int Edit_OPD_Entry(Nullable<int> id, string opd_date, Nullable<int> consult_charege, Nullable<int> usg_charge, Nullable<int> upt_charge, Nullable<int> inj_charge, Nullable<int> dress_charge)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var opd_dateParameter = opd_date != null ?
                new ObjectParameter("opd_date", opd_date) :
                new ObjectParameter("opd_date", typeof(string));
    
            var consult_charegeParameter = consult_charege.HasValue ?
                new ObjectParameter("consult_charege", consult_charege) :
                new ObjectParameter("consult_charege", typeof(int));
    
            var usg_chargeParameter = usg_charge.HasValue ?
                new ObjectParameter("usg_charge", usg_charge) :
                new ObjectParameter("usg_charge", typeof(int));
    
            var upt_chargeParameter = upt_charge.HasValue ?
                new ObjectParameter("upt_charge", upt_charge) :
                new ObjectParameter("upt_charge", typeof(int));
    
            var inj_chargeParameter = inj_charge.HasValue ?
                new ObjectParameter("inj_charge", inj_charge) :
                new ObjectParameter("inj_charge", typeof(int));
    
            var dress_chargeParameter = dress_charge.HasValue ?
                new ObjectParameter("dress_charge", dress_charge) :
                new ObjectParameter("dress_charge", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_OPD_Entry", idParameter, opd_dateParameter, consult_charegeParameter, usg_chargeParameter, upt_chargeParameter, inj_chargeParameter, dress_chargeParameter);
        }
    
        public virtual int Edit_OPD_Record(Nullable<int> opd_id, Nullable<int> patient_id, string casetype, string opd_date, Nullable<int> consult_charege, Nullable<int> usg_charge, Nullable<int> upt_charge, Nullable<int> inj_charge, Nullable<int> dress_charge)
        {
            var opd_idParameter = opd_id.HasValue ?
                new ObjectParameter("opd_id", opd_id) :
                new ObjectParameter("opd_id", typeof(int));
    
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(int));
    
            var casetypeParameter = casetype != null ?
                new ObjectParameter("casetype", casetype) :
                new ObjectParameter("casetype", typeof(string));
    
            var opd_dateParameter = opd_date != null ?
                new ObjectParameter("opd_date", opd_date) :
                new ObjectParameter("opd_date", typeof(string));
    
            var consult_charegeParameter = consult_charege.HasValue ?
                new ObjectParameter("consult_charege", consult_charege) :
                new ObjectParameter("consult_charege", typeof(int));
    
            var usg_chargeParameter = usg_charge.HasValue ?
                new ObjectParameter("usg_charge", usg_charge) :
                new ObjectParameter("usg_charge", typeof(int));
    
            var upt_chargeParameter = upt_charge.HasValue ?
                new ObjectParameter("upt_charge", upt_charge) :
                new ObjectParameter("upt_charge", typeof(int));
    
            var inj_chargeParameter = inj_charge.HasValue ?
                new ObjectParameter("inj_charge", inj_charge) :
                new ObjectParameter("inj_charge", typeof(int));
    
            var dress_chargeParameter = dress_charge.HasValue ?
                new ObjectParameter("dress_charge", dress_charge) :
                new ObjectParameter("dress_charge", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Edit_OPD_Record", opd_idParameter, patient_idParameter, casetypeParameter, opd_dateParameter, consult_charegeParameter, usg_chargeParameter, upt_chargeParameter, inj_chargeParameter, dress_chargeParameter);
        }
    
        public virtual int edit_operation_entry(Nullable<int> id, string room_type, string add_date, string op_date, string op_dia, string op_type, string dis_date, Nullable<int> bill, Nullable<int> conssesion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var room_typeParameter = room_type != null ?
                new ObjectParameter("room_type", room_type) :
                new ObjectParameter("room_type", typeof(string));
    
            var add_dateParameter = add_date != null ?
                new ObjectParameter("add_date", add_date) :
                new ObjectParameter("add_date", typeof(string));
    
            var op_dateParameter = op_date != null ?
                new ObjectParameter("op_date", op_date) :
                new ObjectParameter("op_date", typeof(string));
    
            var op_diaParameter = op_dia != null ?
                new ObjectParameter("op_dia", op_dia) :
                new ObjectParameter("op_dia", typeof(string));
    
            var op_typeParameter = op_type != null ?
                new ObjectParameter("op_type", op_type) :
                new ObjectParameter("op_type", typeof(string));
    
            var dis_dateParameter = dis_date != null ?
                new ObjectParameter("dis_date", dis_date) :
                new ObjectParameter("dis_date", typeof(string));
    
            var billParameter = bill.HasValue ?
                new ObjectParameter("bill", bill) :
                new ObjectParameter("bill", typeof(int));
    
            var conssesionParameter = conssesion.HasValue ?
                new ObjectParameter("conssesion", conssesion) :
                new ObjectParameter("conssesion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_operation_entry", idParameter, room_typeParameter, add_dateParameter, op_dateParameter, op_diaParameter, op_typeParameter, dis_dateParameter, billParameter, conssesionParameter);
        }
    
        public virtual ObjectResult<ge_ipd_id_Result> ge_ipd_id()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ge_ipd_id_Result>("ge_ipd_id");
        }
    
        public virtual ObjectResult<Get_All_IPD_Entry_Result> Get_All_IPD_Entry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_IPD_Entry_Result>("Get_All_IPD_Entry");
        }
    
        public virtual ObjectResult<Get_All_OPD_Entry_Result> Get_All_OPD_Entry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_OPD_Entry_Result>("Get_All_OPD_Entry");
        }
    
        public virtual ObjectResult<get_fullname_Result> get_fullname(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_fullname_Result>("get_fullname", idParameter);
        }
    
        public virtual ObjectResult<get_id_manage_opd_Result> get_id_manage_opd(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_id_manage_opd_Result>("get_id_manage_opd", idParameter);
        }
    
        public virtual ObjectResult<Get_IPD_Charge_Tabele_Result> Get_IPD_Charge_Tabele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_IPD_Charge_Tabele_Result>("Get_IPD_Charge_Tabele");
        }
    
        public virtual ObjectResult<get_last_fulname_Result> get_last_fulname()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_last_fulname_Result>("get_last_fulname");
        }
    
        public virtual ObjectResult<get_lastreg_name_Result> get_lastreg_name()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_lastreg_name_Result>("get_lastreg_name");
        }
    
        public virtual ObjectResult<get_receipt_id_Result> get_receipt_id()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<get_receipt_id_Result>("get_receipt_id");
        }
    
        public virtual ObjectResult<GetIPD_Charges_Table_Result> GetIPD_Charges_Table()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetIPD_Charges_Table_Result>("GetIPD_Charges_Table");
        }
    
        public virtual int insert_delivery_entry(Nullable<int> patient_id, Nullable<int> delivery_type, Nullable<System.DateTime> delivery_date, string delivery_time, string baby_gender, Nullable<double> baby_weight, Nullable<int> bill_amt)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(int));
    
            var delivery_typeParameter = delivery_type.HasValue ?
                new ObjectParameter("delivery_type", delivery_type) :
                new ObjectParameter("delivery_type", typeof(int));
    
            var delivery_dateParameter = delivery_date.HasValue ?
                new ObjectParameter("delivery_date", delivery_date) :
                new ObjectParameter("delivery_date", typeof(System.DateTime));
    
            var delivery_timeParameter = delivery_time != null ?
                new ObjectParameter("delivery_time", delivery_time) :
                new ObjectParameter("delivery_time", typeof(string));
    
            var baby_genderParameter = baby_gender != null ?
                new ObjectParameter("baby_gender", baby_gender) :
                new ObjectParameter("baby_gender", typeof(string));
    
            var baby_weightParameter = baby_weight.HasValue ?
                new ObjectParameter("baby_weight", baby_weight) :
                new ObjectParameter("baby_weight", typeof(double));
    
            var bill_amtParameter = bill_amt.HasValue ?
                new ObjectParameter("bill_amt", bill_amt) :
                new ObjectParameter("bill_amt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_delivery_entry", patient_idParameter, delivery_typeParameter, delivery_dateParameter, delivery_timeParameter, baby_genderParameter, baby_weightParameter, bill_amtParameter);
        }
    
        public virtual int insert_ipd_entry(string ipd_type, Nullable<int> patient_id, Nullable<int> ipd_id, string room_type, string addmission_date, string discharge_date, Nullable<decimal> bill, Nullable<decimal> conssesion, string general_diagnosis, string operation_diagnosis, string operation_date, string operation_type, string delivery_diagnosis, string delivery_type, string delivery_date, string delivery_time, string baby_gender, Nullable<decimal> baby_weight)
        {
            var ipd_typeParameter = ipd_type != null ?
                new ObjectParameter("ipd_type", ipd_type) :
                new ObjectParameter("ipd_type", typeof(string));
    
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(int));
    
            var ipd_idParameter = ipd_id.HasValue ?
                new ObjectParameter("ipd_id", ipd_id) :
                new ObjectParameter("ipd_id", typeof(int));
    
            var room_typeParameter = room_type != null ?
                new ObjectParameter("room_type", room_type) :
                new ObjectParameter("room_type", typeof(string));
    
            var addmission_dateParameter = addmission_date != null ?
                new ObjectParameter("addmission_date", addmission_date) :
                new ObjectParameter("addmission_date", typeof(string));
    
            var discharge_dateParameter = discharge_date != null ?
                new ObjectParameter("discharge_date", discharge_date) :
                new ObjectParameter("discharge_date", typeof(string));
    
            var billParameter = bill.HasValue ?
                new ObjectParameter("bill", bill) :
                new ObjectParameter("bill", typeof(decimal));
    
            var conssesionParameter = conssesion.HasValue ?
                new ObjectParameter("conssesion", conssesion) :
                new ObjectParameter("conssesion", typeof(decimal));
    
            var general_diagnosisParameter = general_diagnosis != null ?
                new ObjectParameter("general_diagnosis", general_diagnosis) :
                new ObjectParameter("general_diagnosis", typeof(string));
    
            var operation_diagnosisParameter = operation_diagnosis != null ?
                new ObjectParameter("operation_diagnosis", operation_diagnosis) :
                new ObjectParameter("operation_diagnosis", typeof(string));
    
            var operation_dateParameter = operation_date != null ?
                new ObjectParameter("operation_date", operation_date) :
                new ObjectParameter("operation_date", typeof(string));
    
            var operation_typeParameter = operation_type != null ?
                new ObjectParameter("operation_type", operation_type) :
                new ObjectParameter("operation_type", typeof(string));
    
            var delivery_diagnosisParameter = delivery_diagnosis != null ?
                new ObjectParameter("delivery_diagnosis", delivery_diagnosis) :
                new ObjectParameter("delivery_diagnosis", typeof(string));
    
            var delivery_typeParameter = delivery_type != null ?
                new ObjectParameter("delivery_type", delivery_type) :
                new ObjectParameter("delivery_type", typeof(string));
    
            var delivery_dateParameter = delivery_date != null ?
                new ObjectParameter("delivery_date", delivery_date) :
                new ObjectParameter("delivery_date", typeof(string));
    
            var delivery_timeParameter = delivery_time != null ?
                new ObjectParameter("delivery_time", delivery_time) :
                new ObjectParameter("delivery_time", typeof(string));
    
            var baby_genderParameter = baby_gender != null ?
                new ObjectParameter("baby_gender", baby_gender) :
                new ObjectParameter("baby_gender", typeof(string));
    
            var baby_weightParameter = baby_weight.HasValue ?
                new ObjectParameter("baby_weight", baby_weight) :
                new ObjectParameter("baby_weight", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_ipd_entry", ipd_typeParameter, patient_idParameter, ipd_idParameter, room_typeParameter, addmission_dateParameter, discharge_dateParameter, billParameter, conssesionParameter, general_diagnosisParameter, operation_diagnosisParameter, operation_dateParameter, operation_typeParameter, delivery_diagnosisParameter, delivery_typeParameter, delivery_dateParameter, delivery_timeParameter, baby_genderParameter, baby_weightParameter);
        }
    
        public virtual int Insert_IPDCharge_Table(Nullable<int> ipd_id, Nullable<int> charge_id, Nullable<double> day, Nullable<int> rate, Nullable<int> amt)
        {
            var ipd_idParameter = ipd_id.HasValue ?
                new ObjectParameter("ipd_id", ipd_id) :
                new ObjectParameter("ipd_id", typeof(int));
    
            var charge_idParameter = charge_id.HasValue ?
                new ObjectParameter("charge_id", charge_id) :
                new ObjectParameter("charge_id", typeof(int));
    
            var dayParameter = day.HasValue ?
                new ObjectParameter("day", day) :
                new ObjectParameter("day", typeof(double));
    
            var rateParameter = rate.HasValue ?
                new ObjectParameter("rate", rate) :
                new ObjectParameter("rate", typeof(int));
    
            var amtParameter = amt.HasValue ?
                new ObjectParameter("amt", amt) :
                new ObjectParameter("amt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_IPDCharge_Table", ipd_idParameter, charge_idParameter, dayParameter, rateParameter, amtParameter);
        }
    
        public virtual int insert_medicine(string medicine, Nullable<int> type)
        {
            var medicineParameter = medicine != null ?
                new ObjectParameter("medicine", medicine) :
                new ObjectParameter("medicine", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insert_medicine", medicineParameter, typeParameter);
        }
    
        public virtual int Insert_OPD_Entry(Nullable<int> patient_id, string opd_date, string case_type, Nullable<int> consult_charege, Nullable<int> usg_charge, Nullable<int> upt_charge, Nullable<int> inj_charge, Nullable<int> dress_charge)
        {
            var patient_idParameter = patient_id.HasValue ?
                new ObjectParameter("patient_id", patient_id) :
                new ObjectParameter("patient_id", typeof(int));
    
            var opd_dateParameter = opd_date != null ?
                new ObjectParameter("opd_date", opd_date) :
                new ObjectParameter("opd_date", typeof(string));
    
            var case_typeParameter = case_type != null ?
                new ObjectParameter("case_type", case_type) :
                new ObjectParameter("case_type", typeof(string));
    
            var consult_charegeParameter = consult_charege.HasValue ?
                new ObjectParameter("consult_charege", consult_charege) :
                new ObjectParameter("consult_charege", typeof(int));
    
            var usg_chargeParameter = usg_charge.HasValue ?
                new ObjectParameter("usg_charge", usg_charge) :
                new ObjectParameter("usg_charge", typeof(int));
    
            var upt_chargeParameter = upt_charge.HasValue ?
                new ObjectParameter("upt_charge", upt_charge) :
                new ObjectParameter("upt_charge", typeof(int));
    
            var inj_chargeParameter = inj_charge.HasValue ?
                new ObjectParameter("inj_charge", inj_charge) :
                new ObjectParameter("inj_charge", typeof(int));
    
            var dress_chargeParameter = dress_charge.HasValue ?
                new ObjectParameter("dress_charge", dress_charge) :
                new ObjectParameter("dress_charge", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_OPD_Entry", patient_idParameter, opd_dateParameter, case_typeParameter, consult_charegeParameter, usg_chargeParameter, upt_chargeParameter, inj_chargeParameter, dress_chargeParameter);
        }
    
        public virtual int inset_medicine(string medicine, Nullable<int> type)
        {
            var medicineParameter = medicine != null ?
                new ObjectParameter("medicine", medicine) :
                new ObjectParameter("medicine", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inset_medicine", medicineParameter, typeParameter);
        }
    
        public virtual ObjectResult<ipd_invoice_Result> ipd_invoice(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ipd_invoice_Result>("ipd_invoice", idParameter);
        }
    
        public virtual ObjectResult<IPD_Report_Result> IPD_Report(string report_type, string addate, string fromdate, string todate)
        {
            var report_typeParameter = report_type != null ?
                new ObjectParameter("report_type", report_type) :
                new ObjectParameter("report_type", typeof(string));
    
            var addateParameter = addate != null ?
                new ObjectParameter("addate", addate) :
                new ObjectParameter("addate", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IPD_Report_Result>("IPD_Report", report_typeParameter, addateParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<login_Result> login(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<login_Result>("login", usernameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<manage_ipd_entry_Result> manage_ipd_entry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<manage_ipd_entry_Result>("manage_ipd_entry");
        }
    
        public virtual ObjectResult<manage_opd_entry_Result> manage_opd_entry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<manage_opd_entry_Result>("manage_opd_entry");
        }
    
        public virtual ObjectResult<OPD_Report_Result> OPD_Report(string report_type, string opddate, string fromdate, string todate)
        {
            var report_typeParameter = report_type != null ?
                new ObjectParameter("report_type", report_type) :
                new ObjectParameter("report_type", typeof(string));
    
            var opddateParameter = opddate != null ?
                new ObjectParameter("opddate", opddate) :
                new ObjectParameter("opddate", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OPD_Report_Result>("OPD_Report", report_typeParameter, opddateParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<opd_report_collection_monthly_Result> opd_report_collection_monthly(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<opd_report_collection_monthly_Result>("opd_report_collection_monthly", dateParameter);
        }
    
        public virtual ObjectResult<opd_report_collection_monthly1_Result> opd_report_collection_monthly1(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<opd_report_collection_monthly1_Result>("opd_report_collection_monthly1", dateParameter);
        }
    
        public virtual ObjectResult<opd_report_colletion_Result> opd_report_colletion(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<opd_report_colletion_Result>("opd_report_colletion", dateParameter);
        }
    
        public virtual ObjectResult<opd_report_colletion_daily_Result> opd_report_colletion_daily(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<opd_report_colletion_daily_Result>("opd_report_colletion_daily", dateParameter);
        }
    
        public virtual ObjectResult<opd_report_datewise_Result> opd_report_datewise(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<opd_report_datewise_Result>("opd_report_datewise", dateParameter);
        }
    
        public virtual ObjectResult<OPD_Report_Monthly_Result> OPD_Report_Monthly(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OPD_Report_Monthly_Result>("OPD_Report_Monthly", dateParameter);
        }
    
        public virtual ObjectResult<opd_report_monthwise_Result> opd_report_monthwise(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<opd_report_monthwise_Result>("opd_report_monthwise", dateParameter);
        }
    
        public virtual ObjectResult<opd_report_monthwise1_Result> opd_report_monthwise1(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<opd_report_monthwise1_Result>("opd_report_monthwise1", dateParameter);
        }
    
        public virtual int patient_reg(string full_name, string address, Nullable<decimal> mobile, Nullable<int> age)
        {
            var full_nameParameter = full_name != null ?
                new ObjectParameter("full_name", full_name) :
                new ObjectParameter("full_name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var mobileParameter = mobile.HasValue ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(decimal));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("age", age) :
                new ObjectParameter("age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("patient_reg", full_nameParameter, addressParameter, mobileParameter, ageParameter);
        }
    
        public virtual ObjectResult<string> Procedure()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Procedure");
        }
    
        public virtual ObjectResult<Procedure1_Result> Procedure1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Procedure1_Result>("Procedure1");
        }
    
        public virtual ObjectResult<Search_In_OPDGrid_Result> Search_In_OPDGrid(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Search_In_OPDGrid_Result>("Search_In_OPDGrid", searchParameter);
        }
    
        public virtual ObjectResult<Nullable<System.TimeSpan>> t(string t)
        {
            var tParameter = t != null ?
                new ObjectParameter("t", t) :
                new ObjectParameter("t", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.TimeSpan>>("t", tParameter);
        }
    
        public virtual ObjectResult<utility_Result> utility(string date)
        {
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<utility_Result>("utility", dateParameter);
        }
    
        public virtual ObjectResult<view_all_patient_Result> view_all_patient()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<view_all_patient_Result>("view_all_patient");
        }
    
        public virtual ObjectResult<DateWiseIPD_Collection_Result> DateWiseIPD_Collection(string report_type, string date, string fromdate, string todate)
        {
            var report_typeParameter = report_type != null ?
                new ObjectParameter("report_type", report_type) :
                new ObjectParameter("report_type", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DateWiseIPD_Collection_Result>("DateWiseIPD_Collection", report_typeParameter, dateParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<DateWiseOPD_Collection_Result> DateWiseOPD_Collection(string report_type, string date, string fromdate, string todate)
        {
            var report_typeParameter = report_type != null ?
                new ObjectParameter("report_type", report_type) :
                new ObjectParameter("report_type", typeof(string));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DateWiseOPD_Collection_Result>("DateWiseOPD_Collection", report_typeParameter, dateParameter, fromdateParameter, todateParameter);
        }
    }
}

@using PagedList;
@using PagedList.Mvc;
@model IPagedList<AASTHA.Models.general_diagnosis>

@{
    Layout = null;
}
<div class="blockui_rightgrid">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>
                    No.
                </th>
                <th>
                    General Diagnosis Title
                </th>
                <th width="150px">Action</th>
            </tr>
        </thead>

        @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
        {
            <tr>
                <td>
                    @(item.Index + ((Model.PageNumber - 1) * Model.PageSize) + 1)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.general_diagnosis_name)
                </td>
                <td>
                    @Ajax.ActionLink("Edit", "AddEdit_GeneralDiagnosis", "IPD", new { id = item.Data.general_diagnosis_Id, page = Request.QueryString["page"] }, new AjaxOptions { UpdateTargetId = "AddEdit_General", }, new { @class = "btn btn-info btn-sm" })
                    @Ajax.ActionLink("Delete", "Delete_GeneralDiagnosis", "IPD", new { id = item.Data.general_diagnosis_Id, page = Request.QueryString["page"] }, new AjaxOptions { UpdateTargetId = "Grid_General", OnBegin = "blockui_rightgrid", OnComplete = "unblockui_rightgrid", Confirm = "Are you sure to delete" }, new { @class = "btn btn-danger btn-sm" })
                </td>
            </tr>
        }
    </table>
</div>
@if (Model.PageCount > 1)
{
    @Html.PagedListPager(Model, page => Url.Action("GeneralDiagnosisGrid", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions { UpdateTargetId = "Grid_General", OnBegin = "blockui_rightgrid", OnComplete = "unblockui_rightgrid", OnSuccess = "OnSuccess" }))
}
